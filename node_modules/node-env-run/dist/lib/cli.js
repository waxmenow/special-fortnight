"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var path = require("path");
var program = require("commander");
var dotenv = require("dotenv");
var Debug = require("debug");
var utils_1 = require("./utils");
var debug = Debug('node-env-run');
var cwd = process.cwd();
function parseArgs(argv) {
    var script;
    program
        .version('2.0.1')
        .arguments('<file>')
        .action(function (file) {
        script = file;
    })
        .option('-f, --force', 'Temporarily overrides existing env variables with the ones in the .env file')
        .option('-E, --env [filePath]', 'Location of .env file relative from the current working directory', '.env')
        .option('--verbose', 'Enable verbose logging')
        .option('--encoding [encoding]', 'Encoding of the .env file', 'utf8')
        .option('-a, --newArguments [args]', 'Arguments that should be passed to the script. Wrap in quotes.', '');
    program.parse(argv);
    return { program: program, script: script };
}
exports.parseArgs = parseArgs;
function init(_a) {
    var program = _a.program, script = _a.script;
    var envFilePath = path.resolve(cwd, program.env);
    if (!fs.existsSync(envFilePath)) {
        var error = new Error("Could not find the .env file under: \"" + envFilePath + "\"");
        return { isRepl: false, error: error };
    }
    debug('Reading .env file');
    var envContent = fs.readFileSync(path.resolve(cwd, program.env), program.encoding);
    var envValues = dotenv.parse(envContent);
    utils_1.setEnvironmentVariables(envValues, program.force);
    if (program.args.length === 0 || !script) {
        return { isRepl: true };
    }
    var scriptToExecute = utils_1.getScriptToExecute(script, cwd);
    if (scriptToExecute === null || !fs.existsSync(scriptToExecute)) {
        var error = new Error('Failed to determine script to execute');
        return { isRepl: false, error: error };
    }
    return { isRepl: false, script: scriptToExecute };
}
exports.init = init;
